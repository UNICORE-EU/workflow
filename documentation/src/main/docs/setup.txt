[[wf_install]]
Installing and setting up the UNICORE Workflow engine
-----------------------------------------------------

This chapter covers basic installation of the Workflow engine and the
integration of the workflow services into an existing UNICORE system.

As a general note, the Workflow engine is based on a UNICORE/X
instance. General UNICORE configuration concepts (such as user
authentication, gateway integration, shared registry, attribute
sources) fully apply, and you should refer to the UNICORE/X manual for
such details.

Prerequisites
~~~~~~~~~~~~~

 * Java 8 or later
 * An existing UNICORE installation with Gateway, Shared Registry 
   and one ore more UNICORE/X execution systems.
 * (for production use) A server certificate

Updating from previous versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you update from 7.x, please note that it is a major update, and we
suggest installing from scratch based on the template config files.
The required changes are very similar to the UNICORE/X 7.x to 8.x
update.


Installation
~~~~~~~~~~~~

The workflow system is available either as part of the UNICORE Server
Bundle, or as separate Linux packages (deb or rpm).

The basic installation procedure is completely analogous to the
installation of a UNICORE/X server.

If you downloaded the UNICORE server bundle, untar the tar.gz, edit
configure.properties and run configure.py

 * please review the configure.properties file and edit the parameters
   to integrate the workflow services into your existing UNICORE
   environment. Then call +./configure.py+ to apply your settings to
   the configuration files. Finally use +./install.py+ to install the
   workflow server files to the selected installation directory.

If using the Linux packages, simply install using the package manager
of your system and review the config files.

Setup
~~~~~

After installation, there are some manual steps needed to integrate the 
new server into your UNICORE installation.

 * Gateway: edit +gateway/conf/connections.properties+ and add the connection 
   data for the Workflow server. For example,

-----
  WORKFLOW = https://localhost:7700
-----

 * XUUDB: if you chose to use an XUUDB for the Workflow server,
   you might have to add entries to the XUUDB to allow users
   access to the workflow engine. Optionally, you can edit the GCID used
   by the workflow/servorch servers, so that existing entries in the XUUDB
   will match.

 * Registry: if the registry is setup to use access control (which is
   the default), you need to allow the Workflow server to register in
   the Registry. The exact procedure depends on how you configured
   your Registry, please cross-reference the section "Enabling access
   control" in the Registry manual. If you're using default
   certificates and the XUUDB, the required entries can be added as
   follows.

-----
cd xuudb
bin/admin.sh add REGISTRY <workflow>/conf/workflow.pem nobody server
-----


Verifying the installation
~~~~~~~~~~~~~~~~~~~~~~~~~~

Using the UNICORE commandline client, you can
check whether the new server is available and accessible:

----
  ucc system-info -l
----

should include output such as

----
Checking for <Workflow submission> endpoint ...
... OK, found 1 endpoint(s)
 * https://localhost:8080/WORKFLOW/rest/workflows
  * server v8.0.0 CN=Demo Workflow,O=UNICORE,C=EU
  * authenticated as: 'CN=Demo User, O=UNICORE, C=EU' role='user'
----

The "authenticated as:" line should list you as "user".

Some more info about the server can be obtained via

----
  ucc rest get https://localhost:8080/WORKFLOW/rest/workflows
----


===== Running a test job

Using UCC again, you can submit workflows

----
  ucc workflow-submit /path/to/samples/date1.json
----

and get the ID of your new workflow back, e.g.

----
  https://localhost:8080/WORKFLOW/rest/workflows/86686f72-b732-42e8-b14d-a8bd514e7edf
----


API documentation
~~~~~~~~~~~~~~~~~

Since version 8.0, the Workflow engine exclusively uses a RESTful API for
all operation including job submission.

You can find an API reference and usage examples on the UNICORE Wiki
at https://sourceforge.net/p/unicore/wiki/REST_API
