[[wf_install]]
Installing and setting up the UNICORE workflow servers
--------------------------------------------------------

This chapter covers basic installation of the workflow system 
and integration of workflow services into an existing UNICORE 
Grid.

As a general note, the workflow services are organized into two
UNICORE/X instances termed "workflow server" and "servorch server". 
General UNICORE configuration concepts (such as gateway 
integration, shared registry, attribute sources) fully apply,
and you should refer to the UNICORE/X manual for details.

Prerequisites
~~~~~~~~~~~~~

 * Java 8 (JRE or SDK) or later
 * An existing UNICORE installation with Gateway, Shared Registry 
   and one ore more UNICORE/X target systems.
 * (for production use) Two server certificates for Workflow
   engine and Service orchestrator.
 * For storing workflow input and output data you need one of
 ** a "global storage" service (see below)
 ** a StorageFactory service
 * If you want to use the RESTful API for submitting workflows, you'll
    also need Unity

Updating from previous versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Please refer to the separate release notes!

[NOTE]
===========
On Windows, please stop and uninstall the services before updating! 
Uninstalling works by executing

----
 workflow\bin\uninstall.bat
 servorch\bin\uninstall.bat
----

In any case you need to replace the jar files and the wrapper.conf
files for workflow and servorch by the new versions.
===========


Installation
~~~~~~~~~~~~

The workflow system is available either as a bundle containing
workflow engine and service orchestrator, OR as separate Linux
packages (deb or rpm) for workflow engine and service orchestrator.

The basic installation procedure is completely analogous to the
installation of the UNICORE core servers.

If you downloaded the workflow system bundle, either use the graphical
installer, or untar the tar.gz, edit configure.properties and run
configure.py

 * Graphical installer: during installation, you will be asked for 
   the parameters of your UNICORE installation.
 * Using the tar.gz bundle: please review the configure.properties file 
   and edit the parameters to integrate the workflow services into your 
   existing UNICORE environment. Then call +./configure.py+ to apply 
   your settings to the configuration files. Finally use +./install.py+ to 
   install the workflow server files to the selected installation directory.

If using the Linux packages, simply install using the package manager
of your system.

Setup
~~~~~

After installation, there are some manual steps needed to integrate the 
new servers into your UNICORE installation.

 * Gateway: edit +gateway/conf/connections.properties+ and add the connection 
   data for the workflow server(s). For example,

-----
  WORKFLOW = https://localhost:7700
  SERVORCH = https://localhost:7701
-----

 * XUUDB: if you chose to use an XUUDB for workflow and service orchestrator,
   you might have to add entries to the XUUDB to allow users
   access to the workflow engine. Optionally, you can edit the GCID used
   by the workflow/servorch servers, so that existing entries in the XUUDB
   will match.

 * Registry: if the registry is setup to use access control (which is the default),
   you need to allow the workflow and servorch services to register themselves in
   the Registry. The exact procedure depends on how you configured your Registry,
   please cross-reference the section "Enabling access control" in the Registry 
   manual. If you're using default certificates and the XUUDB, the required entries 
   can be added as follows.

-----
cd xuudb
bin/admin.sh add REGISTRY <workflow>/conf/workflow.pem nobody server
bin/admin.sh add REGISTRY <servorch>/conf/servorch.pem nobody server
-----


Workflow data storage
~~~~~~~~~~~~~~~~~~~~~

For storing workflow data (i.e. input/output files needed by the workflow tasks)
a storage service instance has to be available. Currently there are two options, 
using a storage factory or using a shared storage instance. In fact, if 
multiple options are available at runtime, users using the UNICORE Rich Client (URC)
can choose one when they submit their workflows.

===== Storage Factory

This is the "best" way to store workflow data. Each workflow will
store its data on its own storage service instance, making management
of these data simpler. The clients (UCC and URC) allow to choose the
storage factory that should be used.

===== Single shared storage

The workflow system can use a single shared normal UNICORE storage
service instance for storing files shared between workflow tasks.

NOTE: while this is simple to set up, it can create a bottleneck in your 
system, because there is no automated cleanup of workflow data.

The storage to be used can be configured on any UNICORE container 
running StorageManagement and FileTransfer services. For example, one of the 
target systems can be used for this purpose.

Please refer to the "Configuring shared storage services" section in
the UNICORE/X manual to learn how to set up a shared storage.

Verifying the installation
~~~~~~~~~~~~~~~~~~~~~~~~~~

If you use the UNICORE Rich Client, you should see the workflow service in the Grid Browser view,
and you should be able to submit workflows to it.

Using the UNICORE commandline client, you can
check whether the new servers are available and accessible:

----
  ucc system-info -l
----

should include output such as

----
Checking for Workflow submission service ...
... OK, found 1 service(s)
   + https://localhost:8080/WORKFLOW/services/WorkflowFactory?res=default_workflow_submission

Checking for Service orchestrator ...
... OK, found 1 service(s)
   + https://localhost:8080/SERVORCH/services/ServiceOrchestrator
----

To check whether the services are accessible, you can use 

----
  ucc wsrf getproperties https://localhost:8080/WORKFLOW/services/WorkflowFactory?res=default_workflow_submission
----
and get output such as

----
  <rp:GetResourcePropertyDocumentResponse>
  etc. etc.
----


===== Running a test job

Using UCC again, you can submit workflows

----
  ucc workflow-submit /path/to/ucc/samples/date.swf
----

and get the ID of your new workflow back

----
 https://localhost:8080/WORKFLOW/services/WorkflowManagement?res=7959937b-897a-49f1-aa7d-f485491872d5
----


RESTful API
~~~~~~~~~~~

Since version 7.6.0, the Workflow server allows workflow submission
and management using a RESTful API.  Please refer to the section on
"RESTful services" in the UNICORE/X manual (7.6 or later), since the
configuration is exactly the same. 

[NOTE]
===========
If you want to submit workflows (in contrast to just checking their
status) you must setup Unity for authentication, because this is
currently the only way to get delegation, i.e. allow the workflow
engine to work on your behalf.
===========

You can find an API reference and usage examples on the UNICORE wiki
at https://sourceforge.net/p/unicore/wiki/REST_API
