[[wf_config]]
Configuration of the Workflow server
------------------------------------

This chapter covers configuration options for the Workflow server.
Since the Workflow server is running in the same underlying 
environment (UNICORE Services Environment, USE), a lot of the
basic configuration options are documented in the UNICORE/X manual.

NOTE
================
The configuration files in the distribution are commented, and contain
example settings for all the options listed here.
================

Depending on how you installed the server, the files are located ion

 * +/etc/unicore/workflow+ (Linux package)
 * +<basedir>/workflow/conf+ (standalone installer)

Workflow processing
~~~~~~~~~~~~~~~~~~~

Some details of the workflow engine's behaviour can be configured. 
All these settings are made in +uas.config+.


==== Limits

To avoid too many tasks submitted (possibly erroneously) from a
workflow, various limits can be set.

 * +workflow.maxActivitiesPerGroup+ limits the total number
of tasks submitted for a single group (i.e. (sub-)workflow).
By default, this limit is 1000, ie. a maximum number of 1000 jobs can
be created by a single group. Note, that it is not possible to
limit the total number of jobs for any workflow, it can only be applied
to individual parts of the workflow (such as loops).

 * +workflow.forEachMaxConcurrentActivities+ limits
the maximum number of tasks in a for-each group that can be active at 
the same time (default: 20).


==== Resubmission

The workflow engine will (in some cases) resubmit failed tasks
to the service orchestrator. To completely switch off
the resubmission,

--------
workflow.resubmitDisable=true
--------

To change the maximum number of resubmissions from the default "3",

--------
workflow.resubmitLimit=3
--------


==== Cleanup behaviour

This controls the behaviour when a workflow is removed (automatically or 
by the user). By default, the workflow engine will remove all child jobs,
but will keep the storage where the files are.
This can be controlled using two properties

 * +workflow.cleanupStorage+ remove storage when workflow is 
   destroyed (default: false)
 * +workflow.cleanupJobs+ remove jobs when workflow is destroyed 
   (default: true)


XNJS settings
~~~~~~~~~~~~~

The workflow engine uses the XNJS library for processing workflows.
Some settings for modifying the behaviour are available, and
are usually found in the workflow server's +container.properties+ file

An important characteristic is the number of threads used by the
workflow engine for processing.Note, this does not control the number
of concurrent activities etc, since all XNJS processing is
asynchronous. The default number (4) is usually fine.

This  properties is set via

--------
XNJS.numberofworkers=4
--------


Property reference
~~~~~~~~~~~~~~~~~~

A complete reference of the properties for configuring the Workflow server
is given in the following table.

include::wf-properties.txt[]

